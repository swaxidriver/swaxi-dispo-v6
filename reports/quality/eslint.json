[{"filePath":"/home/runner/work/swaxi-dispo-v6/swaxi-dispo-v6/babel.config.cjs","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/runner/work/swaxi-dispo-v6/swaxi-dispo-v6/eslint.config.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/runner/work/swaxi-dispo-v6/swaxi-dispo-v6/jest.config.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/runner/work/swaxi-dispo-v6/swaxi-dispo-v6/jest.setup.cjs","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/runner/work/swaxi-dispo-v6/swaxi-dispo-v6/jest.setup.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/runner/work/swaxi-dispo-v6/swaxi-dispo-v6/postcss.config.cjs","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/runner/work/swaxi-dispo-v6/swaxi-dispo-v6/postcss.config.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/runner/work/swaxi-dispo-v6/swaxi-dispo-v6/public/sw.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/runner/work/swaxi-dispo-v6/swaxi-dispo-v6/scripts/check-imports.mjs","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/runner/work/swaxi-dispo-v6/swaxi-dispo-v6/scripts/check-raw-colors.mjs","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/runner/work/swaxi-dispo-v6/swaxi-dispo-v6/scripts/contrast-audit.mjs","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/runner/work/swaxi-dispo-v6/swaxi-dispo-v6/scripts/quality.mjs","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/runner/work/swaxi-dispo-v6/swaxi-dispo-v6/src/App.jsx","messages":[],"suppressedMessages":[{"ruleId":"import/order","severity":1,"message":"There should be no empty line within import group","line":18,"column":1,"nodeType":"ImportDeclaration","endLine":18,"endColumn":39,"suppressions":[{"kind":"directive","justification":""}]}],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/runner/work/swaxi-dispo-v6/swaxi-dispo-v6/src/components/ActiveRoleBadge.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/runner/work/swaxi-dispo-v6/swaxi-dispo-v6/src/components/AutosaveManager.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/runner/work/swaxi-dispo-v6/swaxi-dispo-v6/src/components/ConnectionStatus.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/runner/work/swaxi-dispo-v6/swaxi-dispo-v6/src/components/CreateShiftModal.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/runner/work/swaxi-dispo-v6/swaxi-dispo-v6/src/components/ErrorBoundary.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/runner/work/swaxi-dispo-v6/swaxi-dispo-v6/src/components/FeedbackModal.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/runner/work/swaxi-dispo-v6/swaxi-dispo-v6/src/components/LiveVersionBanner.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/runner/work/swaxi-dispo-v6/swaxi-dispo-v6/src/components/Login.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/runner/work/swaxi-dispo-v6/swaxi-dispo-v6/src/components/MiniAnalytics.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/runner/work/swaxi-dispo-v6/swaxi-dispo-v6/src/components/Navigation.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/runner/work/swaxi-dispo-v6/swaxi-dispo-v6/src/components/NotificationMenu.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/runner/work/swaxi-dispo-v6/swaxi-dispo-v6/src/components/RoleManagement.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/runner/work/swaxi-dispo-v6/swaxi-dispo-v6/src/components/SeriesApplicationModal.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/runner/work/swaxi-dispo-v6/swaxi-dispo-v6/src/components/ShiftDetailsModal.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/runner/work/swaxi-dispo-v6/swaxi-dispo-v6/src/components/ShiftTable.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/runner/work/swaxi-dispo-v6/swaxi-dispo-v6/src/components/ShiftTemplateManager.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/runner/work/swaxi-dispo-v6/swaxi-dispo-v6/src/components/ThemeToggle.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/runner/work/swaxi-dispo-v6/swaxi-dispo-v6/src/components/VersionBadge.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/runner/work/swaxi-dispo-v6/swaxi-dispo-v6/src/config/featureFlags.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/runner/work/swaxi-dispo-v6/swaxi-dispo-v6/src/contexts/AuthContext.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/runner/work/swaxi-dispo-v6/swaxi-dispo-v6/src/contexts/FeedbackContext.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/runner/work/swaxi-dispo-v6/swaxi-dispo-v6/src/contexts/ShiftContext.jsx","messages":[],"suppressedMessages":[{"ruleId":"import/order","severity":1,"message":"There should be no empty line within import group","line":18,"column":1,"nodeType":"ImportDeclaration","endLine":18,"endColumn":57,"fix":{"range":[914,915],"text":""},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"import/order","severity":1,"message":"There should be at least one empty line between import groups","line":20,"column":1,"nodeType":"ImportDeclaration","endLine":20,"endColumn":50,"fix":{"range":[964,964],"text":"\n"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"import/order","severity":1,"message":"There should be at least one empty line between import groups","line":21,"column":1,"nodeType":"ImportDeclaration","endLine":21,"endColumn":64,"fix":{"range":[1028,1028],"text":"\n"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"import/order","severity":1,"message":"`./ShiftContextCore` import should occur after import of `../utils/id`","line":21,"column":1,"nodeType":"ImportDeclaration","endLine":21,"endColumn":64,"fix":{"range":[965,1275],"text":"import { applyInitialSeedIfEmpty } from '../seed/initialData'\nimport { enqueue, drain as drainQueue, peekQueue } from '../services/offlineQueue'\nimport { STATUS, assertTransition } from '../domain/status'\nimport { generateId } from '../utils/id'\nimport { initialState, shiftReducer } from './ShiftContextCore'\n"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"import/order","severity":1,"message":"There should be at least one empty line between import groups","line":25,"column":1,"nodeType":"ImportDeclaration","endLine":25,"endColumn":41,"fix":{"range":[1274,1274],"text":"\n"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useEffect has missing dependencies: 'disableAsyncBootstrap', 'enableAsyncInTests', 'isTestEnv', and 'state.applications'. Either include them or remove the dependency array.","line":94,"column":6,"nodeType":"ArrayExpression","endLine":94,"endColumn":8,"suggestions":[{"desc":"Update the dependencies array to be: [disableAsyncBootstrap, enableAsyncInTests, isTestEnv, state.applications]","fix":{"range":[4469,4471],"text":"[disableAsyncBootstrap, enableAsyncInTests, isTestEnv, state.applications]"}}],"suppressions":[{"kind":"directive","justification":""}]}],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/runner/work/swaxi-dispo-v6/swaxi-dispo-v6/src/contexts/ShiftContextCore.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/runner/work/swaxi-dispo-v6/swaxi-dispo-v6/src/contexts/ShiftTemplateContext.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/runner/work/swaxi-dispo-v6/swaxi-dispo-v6/src/contexts/ShiftTemplateContextCore.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/runner/work/swaxi-dispo-v6/swaxi-dispo-v6/src/contexts/ThemeContext.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/runner/work/swaxi-dispo-v6/swaxi-dispo-v6/src/contexts/ThemeContextCore.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/runner/work/swaxi-dispo-v6/swaxi-dispo-v6/src/contexts/useAuth.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/runner/work/swaxi-dispo-v6/swaxi-dispo-v6/src/contexts/useFeedback.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/runner/work/swaxi-dispo-v6/swaxi-dispo-v6/src/contexts/useShiftTemplates.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/runner/work/swaxi-dispo-v6/swaxi-dispo-v6/src/contexts/useShifts.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/runner/work/swaxi-dispo-v6/swaxi-dispo-v6/src/contexts/useTheme.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/runner/work/swaxi-dispo-v6/swaxi-dispo-v6/src/domain/status.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/runner/work/swaxi-dispo-v6/swaxi-dispo-v6/src/hooks/index.js","messages":[{"ruleId":"import/order","severity":1,"message":"There should be at least one empty line between import groups","line":1,"column":1,"nodeType":"ImportDeclaration","endLine":1,"endColumn":46,"fix":{"range":[45,45],"text":"\n"}}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"import { useState, useCallback } from 'react'\nimport { logError } from '../utils/logger'\n\n/**\n * Custom hook for managing async operations with loading and error states\n * @param {Function} asyncFn - The async function to execute\n * @param {Object} options - Configuration options\n * @param {boolean} options.logErrors - Whether to log errors (default: true)\n * @param {Function} options.onSuccess - Callback executed on success\n * @param {Function} options.onError - Callback executed on error\n * @returns {Object} - { execute, isLoading, error, clearError }\n */\nexport function useAsyncOperation(asyncFn, options = {}) {\n  const { logErrors = true, onSuccess, onError } = options\n  const [isLoading, setIsLoading] = useState(false)\n  const [error, setError] = useState(null)\n\n  const clearError = useCallback(() => {\n    setError(null)\n  }, [])\n\n  const execute = useCallback(async (...args) => {\n    if (isLoading) return null\n    \n    setIsLoading(true)\n    setError(null)\n    \n    try {\n      const result = await asyncFn(...args)\n      onSuccess?.(result)\n      return result\n    } catch (err) {\n      const errorMessage = err instanceof Error ? err.message : 'An unknown error occurred'\n      setError(errorMessage)\n      \n      if (logErrors) {\n        logError('Async operation failed:', err)\n      }\n      \n      onError?.(err)\n      throw err\n    } finally {\n      setIsLoading(false)\n    }\n  }, [asyncFn, isLoading, logErrors, onSuccess, onError])\n\n  return {\n    execute,\n    isLoading,\n    error,\n    clearError\n  }\n}\n\n/**\n * Hook for managing form state with validation\n * @param {Object} initialState - Initial form values\n * @param {Function} validator - Function to validate form data\n * @returns {Object} - Form state management utilities\n */\nexport function useFormState(initialState = {}, validator = null) {\n  const [values, setValues] = useState(initialState)\n  const [errors, setErrors] = useState({})\n  const [touched, setTouched] = useState({})\n\n  const setValue = useCallback((name, value) => {\n    setValues(prev => ({ ...prev, [name]: value }))\n    \n    // Clear error when user starts typing\n    if (errors[name]) {\n      setErrors(prev => ({ ...prev, [name]: null }))\n    }\n  }, [errors])\n\n  const setTouchedField = useCallback((name) => {\n    setTouched(prev => ({ ...prev, [name]: true }))\n  }, [])\n\n  const validate = useCallback(() => {\n    if (!validator) return true\n    \n    const validationErrors = validator(values)\n    setErrors(validationErrors || {})\n    \n    return Object.keys(validationErrors || {}).length === 0\n  }, [values, validator])\n\n  const reset = useCallback(() => {\n    setValues(initialState)\n    setErrors({})\n    setTouched({})\n  }, [initialState])\n\n  const handleInputChange = useCallback((e) => {\n    const { name, value, type, checked } = e.target\n    setValue(name, type === 'checkbox' ? checked : value)\n  }, [setValue])\n\n  const handleBlur = useCallback((e) => {\n    const { name } = e.target\n    setTouchedField(name)\n    \n    if (validator) {\n      const fieldErrors = validator({ ...values, [name]: values[name] })\n      if (fieldErrors[name]) {\n        setErrors(prev => ({ ...prev, [name]: fieldErrors[name] }))\n      }\n    }\n  }, [values, validator, setTouchedField])\n\n  return {\n    values,\n    errors,\n    touched,\n    setValue,\n    setTouched: setTouchedField,\n    validate,\n    reset,\n    handleInputChange,\n    handleBlur,\n    isValid: Object.keys(errors).length === 0\n  }\n}\n\n/**\n * Hook for managing local storage with JSON serialization\n * @param {string} key - Storage key\n * @param {*} defaultValue - Default value if key doesn't exist\n * @returns {Array} - [value, setValue, removeValue]\n */\nexport function useLocalStorage(key, defaultValue = null) {\n  const [value, setValue] = useState(() => {\n    try {\n      const item = localStorage.getItem(key)\n      return item ? JSON.parse(item) : defaultValue\n    } catch (error) {\n      logError('Failed to read from localStorage:', error)\n      return defaultValue\n    }\n  })\n\n  const setStoredValue = useCallback((newValue) => {\n    try {\n      localStorage.setItem(key, JSON.stringify(newValue))\n      setValue(newValue)\n    } catch (error) {\n      logError('Failed to write to localStorage:', error)\n      // Don't update state if localStorage fails\n    }\n  }, [key])\n\n  const removeValue = useCallback(() => {\n    try {\n      setValue(defaultValue)\n      localStorage.removeItem(key)\n    } catch (error) {\n      logError('Failed to remove from localStorage:', error)\n    }\n  }, [key, defaultValue])\n\n  return [value, setStoredValue, removeValue]\n}\n\nexport default {\n  useAsyncOperation,\n  useFormState,\n  useLocalStorage\n}","usedDeprecatedRules":[]},{"filePath":"/home/runner/work/swaxi-dispo-v6/swaxi-dispo-v6/src/main.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/runner/work/swaxi-dispo-v6/swaxi-dispo-v6/src/pages/Administration.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/runner/work/swaxi-dispo-v6/swaxi-dispo-v6/src/pages/Audit.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/runner/work/swaxi-dispo-v6/swaxi-dispo-v6/src/pages/Calendar.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/runner/work/swaxi-dispo-v6/swaxi-dispo-v6/src/pages/Dashboard.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/runner/work/swaxi-dispo-v6/swaxi-dispo-v6/src/pages/TestPage.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/runner/work/swaxi-dispo-v6/swaxi-dispo-v6/src/repository/InMemoryShiftRepository.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/runner/work/swaxi-dispo-v6/swaxi-dispo-v6/src/repository/IndexedDBShiftRepository.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/runner/work/swaxi-dispo-v6/swaxi-dispo-v6/src/repository/SharePointShiftRepository.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/runner/work/swaxi-dispo-v6/swaxi-dispo-v6/src/repository/ShiftRepository.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/runner/work/swaxi-dispo-v6/swaxi-dispo-v6/src/repository/repositoryFactory.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/runner/work/swaxi-dispo-v6/swaxi-dispo-v6/src/seed/initialData.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/runner/work/swaxi-dispo-v6/swaxi-dispo-v6/src/services/firebaseConfig.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/runner/work/swaxi-dispo-v6/swaxi-dispo-v6/src/services/migrationService.js","messages":[{"ruleId":"import/order","severity":1,"message":"There should be at least one empty line between import groups","line":4,"column":1,"nodeType":"ImportDeclaration","endLine":4,"endColumn":39,"fix":{"range":[150,150],"text":"\n"}},{"ruleId":"import/order","severity":1,"message":"`../utils/logger` import should occur before import of `./firebaseConfig`","line":5,"column":1,"nodeType":"ImportDeclaration","endLine":5,"endColumn":53,"fix":{"range":[112,204],"text":"import { logInfo, logError } from '../utils/logger';\nimport { db } from './firebaseConfig';\n"}}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":2,"source":"// src/services/migrationService.js\nimport { collection, writeBatch, doc, getDocs } from 'firebase/firestore';\n\nimport { db } from './firebaseConfig';\nimport { logInfo, logError } from '../utils/logger';\n\nexport class MigrationService {\n  async exportLocalStorageData() {\n    const data = {\n      shifts: JSON.parse(localStorage.getItem('swaxi-dispo-state') || '{\"shifts\": []}'),\n      auth: JSON.parse(localStorage.getItem('swaxi-auth') || '{}'),\n      timestamp: new Date().toISOString(),\n      version: '5.3'\n    };\n\n    // Create downloadable JSON file\n    const blob = new Blob([JSON.stringify(data, null, 2)], { type: 'application/json' });\n    const url = URL.createObjectURL(blob);\n    \n    const a = document.createElement('a');\n    a.href = url;\n    a.download = `swaxi-export-${new Date().toISOString().split('T')[0]}.json`;\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n    URL.revokeObjectURL(url);\n\n    return data;\n  }\n\n  async importToFirebase(jsonData) {\n    const batch = writeBatch(db);\n    let processedCount = 0;\n\n    try {\n      // Import shifts\n      if (jsonData.shifts && Array.isArray(jsonData.shifts)) {\n        jsonData.shifts.forEach((shift) => {\n          const shiftRef = doc(collection(db, 'shifts'));\n          batch.set(shiftRef, {\n            ...shift,\n            id: shiftRef.id,\n            createdAt: new Date(),\n            updatedAt: new Date(),\n            migratedFrom: 'localStorage'\n          });\n          processedCount++;\n        });\n      }\n\n      // Commit in batches of 500 (Firestore limit)\n      await batch.commit();\n      \n      logInfo(`✅ Successfully migrated ${processedCount} records to Firebase`);\n      return { success: true, count: processedCount };\n    } catch (error) {\n      logError('❌ Migration failed:', error);\n      return { success: false, error: error.message };\n    }\n  }\n\n  async validateMigration() {\n    try {\n      const shiftsSnapshot = await getDocs(collection(db, 'shifts'));\n      const firebaseShiftCount = shiftsSnapshot.size;\n      \n      const localStorageData = JSON.parse(localStorage.getItem('swaxi-dispo-state') || '{\"shifts\": []}');\n      const localShiftCount = localStorageData.shifts?.length || 0;\n\n      const validation = {\n        firebase: firebaseShiftCount,\n        localStorage: localShiftCount,\n        match: firebaseShiftCount === localShiftCount,\n        difference: Math.abs(firebaseShiftCount - localShiftCount)\n      };\n\n      logInfo('Migration validation:', validation);\n      return validation;\n    } catch (error) {\n      logError('Validation error:', error);\n      return { error: error.message };\n    }\n  }\n\n  async createBackup() {\n    try {\n      const collections = ['shifts', 'users', 'applications', 'notifications'];\n      const backup = {\n        timestamp: new Date().toISOString(),\n        data: {}\n      };\n\n      for (const collectionName of collections) {\n        const snapshot = await getDocs(collection(db, collectionName));\n        backup.data[collectionName] = snapshot.docs.map(doc => ({\n          id: doc.id,\n          ...doc.data()\n        }));\n      }\n\n      const blob = new Blob([JSON.stringify(backup, null, 2)], { type: 'application/json' });\n      const url = URL.createObjectURL(blob);\n      \n      const a = document.createElement('a');\n      a.href = url;\n      a.download = `swaxi-backup-${new Date().toISOString().split('T')[0]}.json`;\n      document.body.appendChild(a);\n      a.click();\n      document.body.removeChild(a);\n      URL.revokeObjectURL(url);\n\n      return backup;\n    } catch (error) {\n      console.error('Backup failed:', error);\n      throw error;\n    }\n  }\n}\n","usedDeprecatedRules":[]},{"filePath":"/home/runner/work/swaxi-dispo-v6/swaxi-dispo-v6/src/services/offlineQueue.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/runner/work/swaxi-dispo-v6/swaxi-dispo-v6/src/services/sharePointService.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/runner/work/swaxi-dispo-v6/swaxi-dispo-v6/src/services/shiftGenerationService.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/runner/work/swaxi-dispo-v6/swaxi-dispo-v6/src/tests/ActiveRoleBadge.test.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/runner/work/swaxi-dispo-v6/swaxi-dispo-v6/src/tests/Administration.test.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/runner/work/swaxi-dispo-v6/swaxi-dispo-v6/src/tests/Audit.test.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/runner/work/swaxi-dispo-v6/swaxi-dispo-v6/src/tests/AuthContext.test.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/runner/work/swaxi-dispo-v6/swaxi-dispo-v6/src/tests/AutosaveManager.test.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/runner/work/swaxi-dispo-v6/swaxi-dispo-v6/src/tests/Calendar.test.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/runner/work/swaxi-dispo-v6/swaxi-dispo-v6/src/tests/ConnectionStatus.flag.test.jsx","messages":[],"suppressedMessages":[{"ruleId":"no-undef","severity":2,"message":"'process' is not defined.","line":6,"column":3,"nodeType":"Identifier","messageId":"undef","endLine":6,"endColumn":10,"suppressions":[{"kind":"directive","justification":""}]}],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/runner/work/swaxi-dispo-v6/swaxi-dispo-v6/src/tests/ConnectionStatus.test.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/runner/work/swaxi-dispo-v6/swaxi-dispo-v6/src/tests/CreateShiftModal.test.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/runner/work/swaxi-dispo-v6/swaxi-dispo-v6/src/tests/Dashboard.test.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/runner/work/swaxi-dispo-v6/swaxi-dispo-v6/src/tests/FeedbackModal.test.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/runner/work/swaxi-dispo-v6/swaxi-dispo-v6/src/tests/IndexedDBShiftRepository.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/runner/work/swaxi-dispo-v6/swaxi-dispo-v6/src/tests/LiveVersionBanner.test.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/runner/work/swaxi-dispo-v6/swaxi-dispo-v6/src/tests/Login.test.jsx","messages":[],"suppressedMessages":[{"ruleId":"import/order","severity":1,"message":"There should be at least one empty line between import groups","line":2,"column":1,"nodeType":"ImportDeclaration","endLine":2,"endColumn":67,"fix":{"range":[100,100],"text":"\n"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"import/order","severity":1,"message":"There should be no empty line within import group","line":3,"column":1,"nodeType":"ImportDeclaration","endLine":3,"endColumn":40,"suppressions":[{"kind":"directive","justification":""}]}],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/runner/work/swaxi-dispo-v6/swaxi-dispo-v6/src/tests/Navigation.test.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/runner/work/swaxi-dispo-v6/swaxi-dispo-v6/src/tests/NotificationMenu.test.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/runner/work/swaxi-dispo-v6/swaxi-dispo-v6/src/tests/RoleManagement.runtime.test.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/runner/work/swaxi-dispo-v6/swaxi-dispo-v6/src/tests/RoleManagement.test.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/runner/work/swaxi-dispo-v6/swaxi-dispo-v6/src/tests/SeriesApplicationModal.test.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/runner/work/swaxi-dispo-v6/swaxi-dispo-v6/src/tests/ShiftAssignNotifications.test.jsx","messages":[],"suppressedMessages":[{"ruleId":"import/order","severity":1,"message":"There should be at least one empty line between import groups","line":2,"column":1,"nodeType":"ImportDeclaration","endLine":2,"endColumn":76,"fix":{"range":[96,96],"text":"\n"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"react-hooks/rules-of-hooks","severity":2,"message":"React Hook \"useShifts\" is called in function \"_ShiftConsumer\" that is neither a React function component nor a custom React Hook function. React component names must start with an uppercase letter. React Hook names must start with the word \"use\".","line":18,"column":24,"nodeType":"Identifier","endLine":18,"endColumn":33,"suppressions":[{"kind":"directive","justification":""}]}],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/runner/work/swaxi-dispo-v6/swaxi-dispo-v6/src/tests/ShiftContext.pingFailure.test.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/runner/work/swaxi-dispo-v6/swaxi-dispo-v6/src/tests/ShiftContext.test.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/runner/work/swaxi-dispo-v6/swaxi-dispo-v6/src/tests/ShiftContextCore.notifications.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/runner/work/swaxi-dispo-v6/swaxi-dispo-v6/src/tests/ShiftContextCore.reducer.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/runner/work/swaxi-dispo-v6/swaxi-dispo-v6/src/tests/ShiftCreate.persistence.test.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/runner/work/swaxi-dispo-v6/swaxi-dispo-v6/src/tests/ShiftDetailsModal.test.jsx","messages":[{"ruleId":"import/order","severity":1,"message":"There should be at least one empty line between import groups","line":1,"column":1,"nodeType":"ImportDeclaration","endLine":1,"endColumn":76,"fix":{"range":[75,75],"text":"\n"}}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"import { render, screen, fireEvent, waitFor } from '@testing-library/react'\nimport ShiftDetailsModal from '../components/ShiftDetailsModal'\n\nconst mockShift = {\n  id: 'shift_1',\n  date: '2024-01-15',\n  start: '08:00',\n  end: '16:00',\n  workLocation: 'Büro Nord',\n  type: 'early',\n  status: 'open',\n  assignedTo: null,\n  conflicts: []\n}\n\nconst mockUser = {\n  id: 'user_1',\n  name: 'Test User',\n  role: 'disponent'\n}\n\nconst defaultProps = {\n  shift: mockShift,\n  isOpen: true,\n  onClose: jest.fn(),\n  onApply: jest.fn(),\n  onAssign: jest.fn(),\n  currentUser: mockUser,\n  userRole: 'disponent'\n}\n\ndescribe('ShiftDetailsModal', () => {\n  beforeEach(() => {\n    jest.clearAllMocks()\n  })\n\n  test('renders shift details correctly', () => {\n    render(<ShiftDetailsModal {...defaultProps} />)\n    \n    expect(screen.getByText('Schichtdetails')).toBeInTheDocument()\n    expect(screen.getByText('08:00 - 16:00')).toBeInTheDocument()\n    expect(screen.getByText('Büro Nord')).toBeInTheDocument()\n    expect(screen.getByText('Offen')).toBeInTheDocument()\n  })\n\n  test('calculates duration correctly', () => {\n    render(<ShiftDetailsModal {...defaultProps} />)\n    \n    // 8 hours = 480 minutes\n    expect(screen.getByText(/8h/)).toBeInTheDocument()\n  })\n\n  test('shows conflicts when present', () => {\n    const shiftWithConflicts = {\n      ...mockShift,\n      conflicts: ['TIME_OVERLAP', 'DOUBLE_APPLICATION']\n    }\n\n    render(<ShiftDetailsModal {...defaultProps} shift={shiftWithConflicts} />)\n    \n    expect(screen.getByText('Konflikte erkannt')).toBeInTheDocument()\n    expect(screen.getByText('Zeitüberlappung')).toBeInTheDocument()\n    expect(screen.getByText('Doppelte Bewerbung')).toBeInTheDocument()\n  })\n\n  test('shows apply button for open shifts', () => {\n    render(<ShiftDetailsModal {...defaultProps} />)\n    \n    expect(screen.getByText('Bewerben')).toBeInTheDocument()\n  })\n\n  test('hides apply button for assigned shifts', () => {\n    const assignedShift = {\n      ...mockShift,\n      status: 'assigned',\n      assignedTo: 'Other User'\n    }\n\n    render(<ShiftDetailsModal {...defaultProps} shift={assignedShift} />)\n    \n    expect(screen.queryByText('Bewerben')).not.toBeInTheDocument()\n    expect(screen.getByText('Other User')).toBeInTheDocument()\n  })\n\n  test('calls onApply when apply button is clicked', async () => {\n    const onApply = jest.fn().mockResolvedValue()\n    \n    render(<ShiftDetailsModal {...defaultProps} onApply={onApply} />)\n    \n    fireEvent.click(screen.getByText('Bewerben'))\n    \n    await waitFor(() => {\n      expect(onApply).toHaveBeenCalledWith('shift_1', 'user_1')\n    })\n  })\n\n  test('shows assign button for admin users', () => {\n    render(<ShiftDetailsModal {...defaultProps} userRole=\"admin\" />)\n    \n    expect(screen.getByText('Zuweisen')).toBeInTheDocument()\n  })\n\n  test('hides assign button for regular users', () => {\n    render(<ShiftDetailsModal {...defaultProps} userRole=\"analyst\" />)\n    \n    expect(screen.queryByText('Zuweisen')).not.toBeInTheDocument()\n  })\n\n  test('disables apply button when conflicts exist', () => {\n    const shiftWithConflicts = {\n      ...mockShift,\n      conflicts: ['TIME_OVERLAP']\n    }\n\n    render(<ShiftDetailsModal {...defaultProps} shift={shiftWithConflicts} />)\n    \n    const applyButton = screen.getByText('Bewerben')\n    expect(applyButton).toBeDisabled()\n  })\n\n  test('calls onClose when close button is clicked', () => {\n    const onClose = jest.fn()\n    \n    render(<ShiftDetailsModal {...defaultProps} onClose={onClose} />)\n    \n    fireEvent.click(screen.getByLabelText('Schließen'))\n    \n    expect(onClose).toHaveBeenCalled()\n  })\n\n  test('shows loading state when applying', async () => {\n    const onApply = jest.fn(() => new Promise(resolve => setTimeout(resolve, 100)))\n    \n    render(<ShiftDetailsModal {...defaultProps} onApply={onApply} />)\n    \n    fireEvent.click(screen.getByText('Bewerben'))\n    \n    expect(screen.getByText('Bewerbe...')).toBeInTheDocument()\n  })\n\n  test('handles overnight shifts correctly', () => {\n    const overnightShift = {\n      ...mockShift,\n      start: '22:00',\n      end: '06:00'\n    }\n\n    render(<ShiftDetailsModal {...defaultProps} shift={overnightShift} />)\n    \n    // Should show 8 hours duration (22:00 to 06:00)\n    expect(screen.getByText('22:00 - 06:00')).toBeInTheDocument()\n    expect(screen.getByText(/8h/)).toBeInTheDocument()\n  })\n\n  test('renders nothing when shift is null', () => {\n    const { container } = render(<ShiftDetailsModal {...defaultProps} shift={null} />)\n    \n    expect(container.firstChild).toBeNull()\n  })\n\n  test('handles missing optional props gracefully', () => {\n    const minimalProps = {\n      shift: { ...mockShift, workLocation: null, assignedTo: null },\n      isOpen: true,\n      onClose: jest.fn(),\n      currentUser: null,\n      userRole: 'analyst'\n    }\n\n    render(<ShiftDetailsModal {...minimalProps} />)\n    \n    expect(screen.getByText('Schichtdetails')).toBeInTheDocument()\n    expect(screen.queryByText('Arbeitsort')).not.toBeInTheDocument()\n    expect(screen.queryByText('Zugewiesen an')).not.toBeInTheDocument()\n  })\n})","usedDeprecatedRules":[]},{"filePath":"/home/runner/work/swaxi-dispo-v6/swaxi-dispo-v6/src/tests/ShiftTable.actions.test.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/runner/work/swaxi-dispo-v6/swaxi-dispo-v6/src/tests/ShiftTable.test.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/runner/work/swaxi-dispo-v6/swaxi-dispo-v6/src/tests/ShiftTemplateManager.test.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/runner/work/swaxi-dispo-v6/swaxi-dispo-v6/src/tests/TestPage.test.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/runner/work/swaxi-dispo-v6/swaxi-dispo-v6/src/tests/ThemeContext.test.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/runner/work/swaxi-dispo-v6/swaxi-dispo-v6/src/tests/ThemeToggle.test.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/runner/work/swaxi-dispo-v6/swaxi-dispo-v6/src/tests/VersionBadge.test.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/runner/work/swaxi-dispo-v6/swaxi-dispo-v6/src/tests/a11y/Navigation.a11y.test.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/runner/work/swaxi-dispo-v6/swaxi-dispo-v6/src/tests/a11y/ThemeTokens.a11y.test.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/runner/work/swaxi-dispo-v6/swaxi-dispo-v6/src/tests/accessibility.test.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/runner/work/swaxi-dispo-v6/swaxi-dispo-v6/src/tests/authPermissions.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/runner/work/swaxi-dispo-v6/swaxi-dispo-v6/src/tests/conflictsMapping.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/runner/work/swaxi-dispo-v6/swaxi-dispo-v6/src/tests/hooks.test.js","messages":[{"ruleId":"import/order","severity":1,"message":"There should be at least one empty line between import groups","line":1,"column":1,"nodeType":"ImportDeclaration","endLine":1,"endColumn":57,"fix":{"range":[56,56],"text":"\n"}},{"ruleId":"no-unused-vars","severity":1,"message":"'error' is defined but never used. Allowed unused caught errors must match /^_/u.","line":36,"column":18,"nodeType":"Identifier","messageId":"unusedVar","endLine":36,"endColumn":23},{"ruleId":"no-unused-vars","severity":1,"message":"'error' is defined but never used. Allowed unused caught errors must match /^_/u.","line":68,"column":18,"nodeType":"Identifier","messageId":"unusedVar","endLine":68,"endColumn":23}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"import { renderHook, act } from '@testing-library/react'\nimport { useAsyncOperation, useFormState, useLocalStorage } from '../hooks'\n\ndescribe('Custom Hooks', () => {\n  describe('useAsyncOperation', () => {\n    test('executes async function and returns result', async () => {\n      const mockAsyncFn = jest.fn().mockResolvedValue('success')\n      const { result } = renderHook(() => useAsyncOperation(mockAsyncFn))\n\n      expect(result.current.isLoading).toBe(false)\n      expect(result.current.error).toBe(null)\n\n      let response\n      await act(async () => {\n        response = await result.current.execute('arg1', 'arg2')\n      })\n\n      expect(mockAsyncFn).toHaveBeenCalledWith('arg1', 'arg2')\n      expect(response).toBe('success')\n      expect(result.current.isLoading).toBe(false)\n      expect(result.current.error).toBe(null)\n    })\n\n    test('handles errors correctly', async () => {\n      const mockError = new Error('Test error')\n      const mockAsyncFn = jest.fn().mockRejectedValue(mockError)\n      const onError = jest.fn()\n\n      const { result } = renderHook(() => \n        useAsyncOperation(mockAsyncFn, { onError })\n      )\n\n      await act(async () => {\n        try {\n          await result.current.execute()\n        } catch (error) {\n          // Expected to throw\n        }\n      })\n\n      expect(result.current.error).toBe('Test error')\n      expect(onError).toHaveBeenCalledWith(mockError)\n      expect(result.current.isLoading).toBe(false)\n    })\n\n    test('calls onSuccess callback', async () => {\n      const mockAsyncFn = jest.fn().mockResolvedValue('success')\n      const onSuccess = jest.fn()\n\n      const { result } = renderHook(() => \n        useAsyncOperation(mockAsyncFn, { onSuccess })\n      )\n\n      await act(async () => {\n        await result.current.execute()\n      })\n\n      expect(onSuccess).toHaveBeenCalledWith('success')\n    })\n\n    test('clears error', async () => {\n      const mockAsyncFn = jest.fn().mockRejectedValue(new Error('Test error'))\n      const { result } = renderHook(() => useAsyncOperation(mockAsyncFn))\n\n      await act(async () => {\n        try {\n          await result.current.execute()\n        } catch (error) {\n          // Expected to throw\n        }\n      })\n\n      expect(result.current.error).toBeTruthy()\n\n      act(() => {\n        result.current.clearError()\n      })\n\n      expect(result.current.error).toBe(null)\n    })\n\n    test('prevents concurrent executions', async () => {\n      const mockAsyncFn = jest.fn(() => new Promise(resolve => setTimeout(resolve, 100)))\n      const { result } = renderHook(() => useAsyncOperation(mockAsyncFn))\n\n      act(() => {\n        result.current.execute()\n      })\n\n      expect(result.current.isLoading).toBe(true)\n\n      const secondResult = await act(async () => {\n        return result.current.execute()\n      })\n\n      expect(secondResult).toBe(null)\n      expect(mockAsyncFn).toHaveBeenCalledTimes(1)\n    })\n  })\n\n  describe('useFormState', () => {\n    test('manages form values', () => {\n      const initialState = { name: '', email: '' }\n      const { result } = renderHook(() => useFormState(initialState))\n\n      expect(result.current.values).toEqual(initialState)\n\n      act(() => {\n        result.current.setValue('name', 'John')\n      })\n\n      expect(result.current.values.name).toBe('John')\n    })\n\n    test('handles input changes', () => {\n      const { result } = renderHook(() => useFormState({ name: '' }))\n\n      const mockEvent = {\n        target: { name: 'name', value: 'John', type: 'text' }\n      }\n\n      act(() => {\n        result.current.handleInputChange(mockEvent)\n      })\n\n      expect(result.current.values.name).toBe('John')\n    })\n\n    test('handles checkbox inputs', () => {\n      const { result } = renderHook(() => useFormState({ agreed: false }))\n\n      const mockEvent = {\n        target: { name: 'agreed', checked: true, type: 'checkbox' }\n      }\n\n      act(() => {\n        result.current.handleInputChange(mockEvent)\n      })\n\n      expect(result.current.values.agreed).toBe(true)\n    })\n\n    test('validates form', () => {\n      const validator = (values) => {\n        const errors = {}\n        if (!values.name) errors.name = 'Name is required'\n        return errors\n      }\n\n      const { result } = renderHook(() => useFormState({ name: '' }, validator))\n\n      act(() => {\n        result.current.validate()\n      })\n\n      expect(result.current.errors.name).toBe('Name is required')\n      expect(result.current.isValid).toBe(false)\n    })\n\n    test('resets form', () => {\n      const initialState = { name: 'John' }\n      const { result } = renderHook(() => useFormState(initialState))\n\n      act(() => {\n        result.current.setValue('name', 'Jane')\n      })\n\n      expect(result.current.values.name).toBe('Jane')\n\n      act(() => {\n        result.current.reset()\n      })\n\n      expect(result.current.values.name).toBe('John')\n      expect(result.current.errors).toEqual({})\n      expect(result.current.touched).toEqual({})\n    })\n  })\n\n  describe('useLocalStorage', () => {\n    beforeEach(() => {\n      localStorage.clear()\n    })\n\n    test('reads from localStorage', () => {\n      localStorage.setItem('test-key', JSON.stringify('test-value'))\n\n      const { result } = renderHook(() => useLocalStorage('test-key', 'default'))\n\n      expect(result.current[0]).toBe('test-value')\n    })\n\n    test('uses default value when key does not exist', () => {\n      const { result } = renderHook(() => useLocalStorage('nonexistent', 'default'))\n\n      expect(result.current[0]).toBe('default')\n    })\n\n    test('writes to localStorage', () => {\n      const { result } = renderHook(() => useLocalStorage('test-key', 'default'))\n\n      act(() => {\n        result.current[1]('new-value')\n      })\n\n      expect(result.current[0]).toBe('new-value')\n      expect(localStorage.getItem('test-key')).toBe('\"new-value\"')\n    })\n\n    test('removes from localStorage', () => {\n      localStorage.setItem('test-key', JSON.stringify('test-value'))\n\n      const { result } = renderHook(() => useLocalStorage('test-key', 'default'))\n\n      act(() => {\n        result.current[2]()\n      })\n\n      expect(result.current[0]).toBe('default')\n      expect(localStorage.getItem('test-key')).toBe(null)\n    })\n\n    test('handles JSON parsing errors gracefully', () => {\n      localStorage.setItem('test-key', 'invalid-json')\n\n      const { result } = renderHook(() => useLocalStorage('test-key', 'default'))\n\n      expect(result.current[0]).toBe('default')\n    })\n  })\n})","usedDeprecatedRules":[]},{"filePath":"/home/runner/work/swaxi-dispo-v6/swaxi-dispo-v6/src/tests/idGenerator.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/runner/work/swaxi-dispo-v6/swaxi-dispo-v6/src/tests/migrationService.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/runner/work/swaxi-dispo-v6/swaxi-dispo-v6/src/tests/mocks/firebaseFirestore.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/runner/work/swaxi-dispo-v6/swaxi-dispo-v6/src/tests/offlineQueue.integration.test.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/runner/work/swaxi-dispo-v6/swaxi-dispo-v6/src/tests/onlineStatus.test.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/runner/work/swaxi-dispo-v6/swaxi-dispo-v6/src/tests/seedSnapshot.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/runner/work/swaxi-dispo-v6/swaxi-dispo-v6/src/tests/sharePointService.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/runner/work/swaxi-dispo-v6/swaxi-dispo-v6/src/tests/shiftCreation.integration.test.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/runner/work/swaxi-dispo-v6/swaxi-dispo-v6/src/tests/shiftDomainGuards.test.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/runner/work/swaxi-dispo-v6/swaxi-dispo-v6/src/tests/shiftGenerationService.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/runner/work/swaxi-dispo-v6/swaxi-dispo-v6/src/tests/statusModel.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/runner/work/swaxi-dispo-v6/swaxi-dispo-v6/src/tests/testUtils.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/runner/work/swaxi-dispo-v6/swaxi-dispo-v6/src/tests/timeAndConflict.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/runner/work/swaxi-dispo-v6/swaxi-dispo-v6/src/tests/unit/ErrorBoundary.test.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/runner/work/swaxi-dispo-v6/swaxi-dispo-v6/src/tests/unit/FeedbackModal.focus.test.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/runner/work/swaxi-dispo-v6/swaxi-dispo-v6/src/tests/unit/constants.roleCapabilities.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/runner/work/swaxi-dispo-v6/swaxi-dispo-v6/src/tests/unit/errorTelemetry.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/runner/work/swaxi-dispo-v6/swaxi-dispo-v6/src/tests/unit/factories.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/runner/work/swaxi-dispo-v6/swaxi-dispo-v6/src/tests/unit/logger.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/runner/work/swaxi-dispo-v6/swaxi-dispo-v6/src/tests/unit/migrationService.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/runner/work/swaxi-dispo-v6/swaxi-dispo-v6/src/tests/utils/factories.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/runner/work/swaxi-dispo-v6/swaxi-dispo-v6/src/tests/validation.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/runner/work/swaxi-dispo-v6/swaxi-dispo-v6/src/utils/auth.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/runner/work/swaxi-dispo-v6/swaxi-dispo-v6/src/utils/conflicts.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/runner/work/swaxi-dispo-v6/swaxi-dispo-v6/src/utils/constants.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/runner/work/swaxi-dispo-v6/swaxi-dispo-v6/src/utils/errorTelemetry.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/runner/work/swaxi-dispo-v6/swaxi-dispo-v6/src/utils/id.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/runner/work/swaxi-dispo-v6/swaxi-dispo-v6/src/utils/logger.js","messages":[],"suppressedMessages":[{"ruleId":"no-undef","severity":2,"message":"'process' is not defined.","line":9,"column":46,"nodeType":"Identifier","messageId":"undef","endLine":9,"endColumn":53,"suppressions":[{"kind":"directive","justification":""}]}],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/runner/work/swaxi-dispo-v6/swaxi-dispo-v6/src/utils/shifts.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/runner/work/swaxi-dispo-v6/swaxi-dispo-v6/src/utils/validation.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/runner/work/swaxi-dispo-v6/swaxi-dispo-v6/tailwind.config.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/runner/work/swaxi-dispo-v6/swaxi-dispo-v6/vite.config.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]}]
