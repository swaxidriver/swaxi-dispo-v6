name: CI

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20, 22]  # LTS and current
        package-manager: [npm]  # Start with npm only, add yarn when stable
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: ${{ matrix.package-manager }}
      - name: Configure package manager retries
        run: |
          npm config set fetch-retries 5
          npm config set fetch-retry-factor 2
          npm config set fetch-retry-maxtimeout 600000
          npm config set fetch-timeout 600000
          npm config set prefer-offline true
      - name: Jitter to avoid registry burst
        run: |
          JITTER=$((RANDOM % 20 + 5))
          echo "Sleeping $JITTER seconds to reduce chance of 429..." && sleep $JITTER
      - name: Install deps (with retry)
        run: |
          n=0
          until [ $n -ge 3 ]; do
            npm ci --no-audit --no-fund && break
            n=$((n+1))
            echo "Package install failed (attempt $n), retrying in $((2**n))s..."
            sleep $((2**n))
          done
          if [ $n -ge 3 ]; then
            echo "Package install failed after retries; attempting fallback install" >&2
            npm install --no-audit --no-fund || { echo "Fallback npm install failed" >&2; exit 1; }
          fi
          # Workaround Rollup native binary missing on linux
          npm install --no-save @rollup/rollup-linux-x64-gnu || true
      - name: Install trunk
        run: |
          # Install trunk without leaving an ephemeral script file that triggers format checks
          curl -fsSL https://get.trunk.io | bash -s -- -y
          echo "$HOME/.trunk/bin" >> $GITHUB_PATH
      - name: Trunk init (idempotent)
        run: |
          trunk init --ci --no-progress || echo "Trunk already initialized or init not required"
      - name: Trunk check (lint + format validation)
        run: |
          trunk version
          trunk check --ci --no-progress || { echo "Trunk check failed"; exit 1; }
      - name: Quality Gate (lint+tests+coverage prioritized summary)
        run: |
          npm run quality || {
            code=$?
            echo "Quality gate failed with exit code $code" >&2
            # Always upload quality artifacts even on failure
            exit $code
          }
      - name: Upload quality reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: quality-reports-node${{ matrix.node-version }}-${{ matrix.package-manager }}
          path: |
            reports/quality/quality-summary.json
            reports/junit/jest-junit.xml
            coverage/coverage-summary.json
            coverage/lcov-report/
      - name: Lint
        run: npm run lint
      - name: Type Check
        run: npm run type-check
      - name: Test with Coverage (â‰¥70% required)
        run: npm run test:coverage -- --ci --silent
      - name: Import integrity
        run: npm run check:imports
      - name: Build
        run: npm run build
      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: dist-node${{ matrix.node-version }}-${{ matrix.package-manager }}
          path: dist

  pages-deploy:
    needs: build-test
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pages: write
      id-token: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Use Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
      - name: Configure npm retries
        run: |
          npm config set fetch-retries 5
          npm config set fetch-retry-factor 2
          npm config set fetch-retry-maxtimeout 600000
          npm config set fetch-timeout 600000
          npm config set prefer-offline true
      - name: Configure Pages
        uses: actions/configure-pages@v5
      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist
      - name: Upload artifact for deployment
        uses: actions/upload-pages-artifact@v3
        with:
          path: dist
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
